Next smaller element::
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Stack<Integer> stack=new Stack<>();
        int arr[]={4,12,5,3,1,2,5,3,1,2,4,6};
        int res[]=new int[arr.length];
        for(int i=arr.length-1;i>=0;i--)
        {
            if(stack.empty())
            res[i]=-1;
            else{
                while(!stack.empty() && stack.peek()>=arr[i])
                stack.pop();
                if(stack.empty())
                res[i]=-1;
                else if(!stack.empty())
                res[i]=stack.peek();
            }
            stack.push(arr[i]);
        }
     for(int i:res)
     System.out.println(i);
    }
}

o/p::
3
5
3
1
-1
1
3
1
-1
-1
-1
-1

-------------------------------------------------------------------------------------------------------------------------------------------------------------\

Next Greater element::
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Stack<Integer> stack=new Stack<>();
        int arr[]={4,12,5,3,1,2,5,3,1,2,4,6};
        int res[]=new int[arr.length];
        for(int i=arr.length-1;i>=0;i--)
        {
            if(stack.empty())
            res[i]=-1;
            else{
                while(!stack.empty() && stack.peek()<=arr[i])
                stack.pop();
                if(stack.empty())
                res[i]=-1;
                else if(!stack.empty())
                res[i]=stack.peek();
            }
            stack.push(arr[i]);
        }
     for(int i:res)
     System.out.println(i);
    }
}

o/p::
12
-1
6
5
2
5
6
4
2
4
6
-1


-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Previous greater element::
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Stack<Integer> stack=new Stack<>();
        int arr[]={4,12,5,3,1,2,5,3,1,2,4,6};
        int res[]=new int[arr.length];
        for(int i=0;i<arr.length;i++)
        {
            if(stack.empty())
            res[i]=-1;
            else{
                while(!stack.empty() && stack.peek()<=arr[i])
                stack.pop();
                if(stack.empty())
                res[i]=-1;
                else if(!stack.empty())
                res[i]=stack.peek();
            }
            stack.push(arr[i]);
        }
     for(int i:res)
     System.out.println(i);
    }
}

o/p::
-1-1
12
5
3
3
12
5
3
3
5
12

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Previous smaller element::

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Stack<Integer> stack=new Stack<>();
        int arr[]={4,12,5,3,1,2,5,3,1,2,4,6};
        int res[]=new int[arr.length];
        for(int i=0;i<arr.length;i++)
        {
            if(stack.empty())
            res[i]=-1;
            else{
                while(!stack.empty() && stack.peek()>=arr[i])
                stack.pop();
                if(stack.empty())
                res[i]=-1;
                else if(!stack.empty())
                res[i]=stack.peek();
            }
            stack.push(arr[i]);
        }
     for(int i:res)
     System.out.println(i);
    }
}

o/p::
-1
4
4
-1
-1
1
2
2
-1
1
2
4
---------------------------------------------------------------------------------------------------------------------------------------------------------
stock span::

class Solution
{
    //Function to calculate the span of stockâ€™s price for all n days.
    public static int[] calculateSpan(int price[], int n)
    {
        int result[]=new int[price.length];
        Stack<Integer> s=new Stack<Integer>();
        
        // result[0]=1;
        // stack.push(0);
        for(int i=0;i<price.length;i++)
        {
            if(s.empty())
            result[i]=1;
            else
            {
                while(!s.empty() && price[i]>=price[s.peek()])
                s.pop();
              if(s.empty())
              result[i]=i+1;
              else
              result[i]=i-s.peek();
                
            }
            s.push(i);
            
        }
        return result;
    }
    
}



Input: 
N = 7, price[] = [100 80 60 70 60 75 85]
Output:
1 1 1 2 1 4 6
